syntax = "proto3";

package com.coralogixapis.alerts.v3;

import "com/coralogix/openapi/v1/annotations.proto";
import "com/coralogixapis/alerts/v3/alert_def_type_definition/common/anomaly_alert_settings.proto";
import "com/coralogixapis/alerts/v3/alert_def_type_definition/metric/anomaly/metric_anomaly_condition_type.proto";
import "com/coralogixapis/alerts/v3/alert_def_type_definition/metric/common/metric_timewindow.proto";
import "com/coralogixapis/alerts/v3/alert_def_type_definition/metric/common/metrics_filter.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// MetricAnomalyType is a message that defines the configuration for metric-based anomaly detection alerts.
message MetricAnomalyType {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Metric-based anomaly alert type"
      description: "Configuration for alerts triggered by anomalous metric patterns"
      required: [
        "metric_filter",
        "rules"
      ]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/alerting/create-an-alert/metrics/anomaly-detection-alerts/"
      description: "Learn more about metric-based anomaly alerts in our documentation"
    }
  };
  // The filter to match metric entries for the alert
  MetricFilter metric_filter = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The filter to match metric entries for the alert."},
    (com.coralogix.openapi.v1.field) = {required: true}
  ];
  // The rules for the metric anomaly alert
  repeated MetricAnomalyRule rules = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The rules for the metric anomaly alert."
      min_items: 1
      max_items: 1
    },
    (com.coralogix.openapi.v1.field) = {
      min_items: 1
      max_items: 1
      required: true
    }
  ];
  // The delay in milliseconds before evaluating the alert condition
  google.protobuf.Int32Value evaluation_delay_ms = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "60000"
      description: "The delay in milliseconds before evaluating the alert condition"
      format: "milliseconds"
    },
    (com.coralogix.openapi.v1.field) = {
      example: "60000"
      format: "milliseconds"
    }
  ];
  // The configuration for anomaly alert settings
  AnomalyAlertSettings anomaly_alert_settings = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Configuration for anomaly alert settings."}];
}

// MetricAnomalyRule is a message that defines the configuration for metric-based anomaly detection rules.
message MetricAnomalyRule {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Metric-based anomaly rule"
      description: "A rule for metric-based anomaly detection alerts"
      required: ["condition"]
    }
  };
  // The condition for the metric anomaly alert
  MetricAnomalyCondition condition = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The condition for the metric anomaly alert."},
    (com.coralogix.openapi.v1.field) = {required: true}
  ];
}

// MetricAnomalyCondition is a message that defines the configuration for metric-based anomaly detection conditions.
message MetricAnomalyCondition {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Metric-based anomaly condition"
      required: [
        "threshold",
        "min_non_null_values_pct",
        "of_the_last",
        "condition_type"
      ]
    }
  };
  // The threshold value for the alert condition
  google.protobuf.DoubleValue threshold = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "10.0"
      description: "The threshold value for the alert condition"
    },
    (com.coralogix.openapi.v1.field) = {
      example: "10.0"
      required: true
    }
  ];
  // The percentage of the metric values that must exceed the threshold to trigger the alert
  google.protobuf.UInt32Value for_over_pct = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "20"
      description: "The percentage of the metric values that must exceed the threshold to trigger the alert"
    },
    (com.coralogix.openapi.v1.field) = {example: "20"}
  ];
  // The time window for the alert condition
  MetricTimeWindow of_the_last = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The time window for the alert condition."},
    (com.coralogix.openapi.v1.field) = {required: true}
  ];
  // The percentage of non-null values required to trigger the alert
  google.protobuf.UInt32Value min_non_null_values_pct = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "10"
      description: "The percentage of non-null values required to trigger the alert"
    },
    (com.coralogix.openapi.v1.field) = {
      example: "10"
      required: true
    }
  ];
  // The type of condition for the alert
  MetricAnomalyConditionType condition_type = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"METRIC_ANOMALY_CONDITION_TYPE_LESS_THAN_USUAL\""
      description: "The type of condition for the alert."
    },
    (com.coralogix.openapi.v1.field) = {
      example: "\"METRIC_ANOMALY_CONDITION_TYPE_LESS_THAN_USUAL\""
      required: true
    }
  ];
}
