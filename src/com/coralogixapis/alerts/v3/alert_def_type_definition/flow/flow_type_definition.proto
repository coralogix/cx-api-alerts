syntax = "proto3";

package com.coralogixapis.alerts.v3;

import "com/coralogix/openapi/v1/annotations.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Configuration for flow-based alerts with multiple stages
message FlowType {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Flow alert type"
      description: "Configuration for flow-based alerts with multiple stages"
      required: ["stages"]
    }
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/alerting/create-an-alert/flow-alerts/"
      description: "Learn more about flow alerts in our documentation"
    }
  };
  // The stages of the flow alert
  repeated FlowStages stages = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The stages of the flow alert"
      min_items: 1
    },
    (com.coralogix.openapi.v1.field) = {
      min_items: 1
      required: true
    }
  ];
  // Whether to enforce suppression for the flow alert
  google.protobuf.BoolValue enforce_suppression = 2 [(com.coralogix.openapi.v1.field) = {example: "true"}];
}

// FlowStages defines the stages in a flow alert
message FlowStages {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Flow stages"
      description: "Defines stages in a flow alert"
      required: [
        "flow_stages",
        "timeframe_ms",
        "timeframe_type"
      ]
    }
  };
  // The stages of the flow alert
  oneof flow_stages {
    // Flow stages groups
    FlowStagesGroups flow_stages_groups = 10 [
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The flow stages groups."},
      (com.coralogix.openapi.v1.field) = {required: true}
    ];
  }
  // The timeframe for the flow alert in milliseconds
  google.protobuf.Int64Value timeframe_ms = 3 [(com.coralogix.openapi.v1.field) = {
    example: "60000"
    pattern: "^\\d+$"
    required: true
  }];
  // The type of timeframe for the flow alert
  TimeframeType timeframe_type = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The type of timeframe for the flow alert."
      example: "TIMEFRAME_TYPE_UP_TO"
    },
    (com.coralogix.openapi.v1.field) = {
      example: "TIMEFRAME_TYPE_UP_TO"
      required: true
    }
  ];
}

// FlowStagesGroups defines groups of stages in a flow alert
message FlowStagesGroups {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Flow stage groups"
      description: "Groups of stages in a flow alert"
      required: ["groups"]
    }
  };
  // The groups of stages in the flow alert
  repeated FlowStagesGroup groups = 1 [(com.coralogix.openapi.v1.field) = {
    min_items: 1
    required: true
  }];
}

// FlowStagesGroup defines a group of stages in a flow alert
message FlowStagesGroup {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Flow stage group"
      description: "Defines a group of stages in a flow alert"
      required: [
        "alert_defs",
        "next_op",
        "alerts_op"
      ]
    }
  };
  // The alert definitions for the flow stage group
  repeated FlowStagesGroupsAlertDefs alert_defs = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The alert definitions for the flow stage group."
      min_items: 1
    },
    (com.coralogix.openapi.v1.field) = {
      min_items: 1
      required: true
    }
  ];
  // The logical operation to apply to the next stage
  NextOp next_op = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The logical operation to apply to the next stage."
      example: "\"NEXT_OP_OR\""
    },
    (com.coralogix.openapi.v1.field) = {
      example: "\"NEXT_OP_OR\""
      required: true
    }
  ];
  // The logical operation to apply to the alerts in the group
  AlertsOp alerts_op = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The logical operation to apply to the alerts in the group."
      example: "\"ALERTS_OP_OR\""
    },
    (com.coralogix.openapi.v1.field) = {
      example: "\"ALERTS_OP_OR\""
      required: true
    }
  ];
}

// FlowStagesGroupsAlertDefs defines alert definitions for a flow stage group
message FlowStagesGroupsAlertDefs {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Flow stage group alert definitions"
      description: "Alert definitions for a flow stage group"
      required: ["id"]
    }
  };
  // The alert definition ID
  google.protobuf.StringValue id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The alert definition ID"
    example: "123e4567-e89b-12d3-a456-426614174000"
    format: "UUIDv4"
  },
  (com.coralogix.openapi.v1.field) = {
    example: "123e4567-e89b-12d3-a456-426614174000"
    format: "UUIDv4"
    required: true
  }];
  // Whether to negate the alert definition or not
  google.protobuf.BoolValue not = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Whether to negate the alert definition or not."
    example: "true"
  },
  (com.coralogix.openapi.v1.field) = {
    example: "true"
  }];
}

// The logical operation to apply to the next stage
enum NextOp {
  NEXT_OP_AND_OR_UNSPECIFIED = 0;
  NEXT_OP_OR = 1;
}

// The logical operation to apply to the alerts in the group
enum AlertsOp {
  ALERTS_OP_AND_OR_UNSPECIFIED = 0;
  ALERTS_OP_OR = 1;
}

// The type of timeframe for the flow alert
enum TimeframeType {
  TIMEFRAME_TYPE_UNSPECIFIED = 0;
  TIMEFRAME_TYPE_UP_TO = 1;
}
