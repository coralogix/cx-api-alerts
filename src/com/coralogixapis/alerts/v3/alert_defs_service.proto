syntax = "proto3";

package com.coralogixapis.alerts.v3;

import "com/coralogix/common/v1/audit_log.proto";
import "com/coralogixapis/alerts/v3/alert_def.proto";
import "com/coralogixapis/alerts/v3/alert_def_priority.proto";
import "com/coralogixapis/alerts/v3/alert_def_type.proto";
import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "com/coralogixapis/alerts/v3/alert_def_query_filter.proto";
import "com/coralogixapis/alerts/v3/pagination.proto";

service AlertDefsService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Alert definitions service"
    description: "View and manage your alerts using alert definitions - data structures that contain the configuration required to create an alert."
    external_docs: {
      url: "https://coralogix.com/docs/user-guides/alerting/introduction-to-alerts/"
      description: "Learn more about alerts in our documentation"
    }
  };

  // Get Alert Def by non changing ID AKA UniqueIdentifier
  rpc GetAlertDef(GetAlertDefRequest) returns (GetAlertDefResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "get alert definition";
    option (google.api.http) = {get: "/v3/alert-defs/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Alert definitions service"]
      summary: "Get alert definition by ID"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "alerts:ReadConfig"}
          }
        }
      }
    };
  }

  rpc GetAlertDefByVersionId(GetAlertDefByVersionIdRequest) returns (GetAlertDefByVersionIdResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "get alert definition by alert version ID";
    option (google.api.http) = {get: "/v3/alert-defs/alert-version-id/{alert_version_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Alert definitions service"]
      summary: "Get alert definition by alert version ID"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "alerts:ReadConfig"}
          }
        }
      }
    };
  }

  rpc CreateAlertDef(CreateAlertDefRequest) returns (CreateAlertDefResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "create alert definition";
    option (google.api.http) = {
      post: "/v3/alert-defs"
      body: "alert_def_properties"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Alert definitions service"]
      summary: "Create an alert"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "alerts:UpdateConfig"}
          }
        }
      }
    };
  }

  rpc ReplaceAlertDef(ReplaceAlertDefRequest) returns (ReplaceAlertDefResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "replace alert definition";
    option (google.api.http) = {
      put: "/v3/alert-defs"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Alert definitions service"]
      summary: "Replace an alert definition"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "alerts:UpdateConfig"}
          }
        }
      }
    };
  }

  //  rpc BatchGetAlertDef(BatchGetAlertDefRequest) returns (BatchGetAlertDefResponse){
  //    option (com.coralogix.common.v1.audit_log_description).description = "batch get alert definitions";
  //    option (google.api.http) = {
  //      get: "/v3/alertDefs:batchGet"
  //    };
  //  }

  rpc ListAlertDefs(ListAlertDefsRequest) returns (ListAlertDefsResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "get alert definitions list";
    option (google.api.http) = {get: "/v3/alert-defs"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Alert definitions service"]
      summary: "Get a list of all accessible alert definitions"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "alerts:ReadConfig"}
          }
        }
      }
    };
  }

  rpc DownloadAlerts(DownloadAlertsRequest) returns (stream DownloadAlertsResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "download alerts";
    option (google.api.http) = {get: "/v3/alerts/download"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Alert definitions service"]
      summary: "Download alerts"
      description: "Download a list of all accessible alert definitions in base64-encoded byte format."
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "alerts:ReadConfig"}
          }
        }
      }
    };
  }

  rpc DeleteAlertDef(DeleteAlertDefRequest) returns (DeleteAlertDefResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "delete alert definitions";
    option (google.api.http) = {delete: "/v3/alert-defs/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Alert definitions service"]
      summary: ""
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "alerts:UpdateConfig"}
          }
        }
      }
    };
  }

  //  rpc AtomicBatchExecuteAlert(AtomicBatchExecuteAlertRequest) returns (AtomicBatchExecuteAlertResponse) {
  //    option (com.coralogix.common.v1.audit_log_description).description = "atomic batch execute alert";
  //    option (google.api.http) = {
  //      post: "/v3/alerts:atomicBatchExecute"
  //      body: "*"
  //    };
  //  }

  //  rpc GetLimits(GetLimitsRequest) returns (GetLimitsResponse) {
  //    option (com.coralogix.common.v1.audit_log_description).description = "get limits";
  //    option (google.api.http) = {
  //      get: "/v3/alerts:getLimits"
  //    };
  //  }
  //
  //  rpc ValidateAlert(ValidateAlertRequest) returns (ValidateAlertResponse) {
  //    option (com.coralogix.common.v1.audit_log_description).description = "validate alert";
  //    option (google.api.http) = {
  //      post: "/v3/alerts:validate"
  //      body: "alert"
  //    };
  //  }

  rpc SetActive(SetActiveRequest) returns (SetActiveResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "disable or enable the alert definitions";
    option (google.api.http) = {post: "/v3/alert-defs/{id}:setActive"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Alert definitions service"]
      summary: "Disable or enable an alert"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "alerts:UpdateConfig"}
          }
        }
      }
    };
  }

  rpc FilterOptionCounts(FilterOptionCountsRequest) returns (FilterOptionCountsResponse) {
    option (com.coralogix.common.v1.audit_log_description).description = "get filter option counts";
    option (google.api.http) = {get: "/v3/alert-defs/filter-option-counts"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "400"
        value: {description: "Bad Request"}
      }
      responses: {
        key: "401"
        value: {description: "Unauthorized request"}
      }
      responses: {
        key: "500"
        value: {description: "Internal server error"}
      }
      tags: ["Alert definitions service"]
      summary: "Get counts for filter options"
      description: "Returns counts for different filter options based on the provided filters"
      extensions: {
        key: "x-coralogixPermissions"
        value: {
          list_value: {
            values: {string_value: "alerts:ReadConfig"}
          }
        }
      }
    };
  }
}

message GetAlertDefRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get alert definition request"
      description: "A request to retrieve an alert definition by ID"
      required: ["id"]
    }
  };
  // Alert definition ID
  google.protobuf.StringValue id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Alert definition ID"
    example: "\"123e4567-e89b-12d3-a456-426614174000\""
    format: "UUIDv4"
  }];
}

message GetAlertDefByVersionIdRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get alert definition by version ID request"
      description: "A request to retrieve an alert definition by version ID"
      required: ["alert_version_id"]
    }
  };
  google.protobuf.StringValue alert_version_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Alert version ID"
    example: "\"123e4567-e89b-12d3-a456-426614174000\""
    format: "UUIDv4"
  }];
}

message GetAlertDefResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get alert definition response"
      description: "A response containing the requested alert definition"
      required: ["alert_def"]
    }
  };
  AlertDef alert_def = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The requested alert definition"}];
}

message GetAlertDefByVersionIdResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Get alert definition by version ID response"
      description: "A response that contains an alert definition for the requested version"
      required: ["alert_def"]
    }
  };
  AlertDef alert_def = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The requested alert definition"}];
}

message ListAlertDefsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List alert definitions response"
      description: "A response that contains a list of alert definitions"
      required: ["alert_defs"]
    }
  };
  repeated AlertDef alert_defs = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "List of alert definitions"
    min_items: 0
  }];
  PaginationResponse pagination = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Pagination settings for the list of alert definitions"
    example: "{ \"next_page_token\": \"abc123\" }"
  }];
}

message ListAlertDefsRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List alert definitions request"
      description: "A request to get list of alert definitions"
    }
  };
  AlertDefQueryFilter query_filter = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Filter to apply to the list of alert definitions"}];
  PaginationRequest pagination = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Pagination settings for the list of alert definitions"
    example: "{ \"page_size\": 10, \"page_token\": \"abc123\" }"
  }];
}

message DownloadAlertsRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Download alert definitions request"
      description: "A request to download all accessible alert definitions in base-64 encoded binary format"
    }
  };
}

message DownloadAlertsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Download alerts response"
      description: "A response containing the downloaded alert data"
      required: ["content"]
    }
  };
  bytes content = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Base64-encoded binary data of the alert definitions"
    example: "\"SGVsbG8gV29ybGQ=\""
    format: "base64"
  }];
}

message BatchGetAlertDefRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Batch get alert definitions request"
      description: "A request to retrieve multiple alert definitions by their IDs"
      required: ["ids"]
    }
  };
  repeated google.protobuf.StringValue ids = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "[\"123e4567-e89b-12d3-a456-426614174000\"]"
    format: "UUIDv4"
  }];
}

message BatchGetAlertDefResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Batch get alert definitions response"
      description: "A response that contains the requested alert definitions and not-found alert IDs"
      required: [
        "alert_defs",
        "not_found_ids"
      ]
    }
  };
  map<string, AlertDef> alert_defs = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Map of alert definition IDs to alert definitions"
    example: "{\"123e4567-e89b-12d3-a456-426614174000\": {}}"
  }];
  repeated google.protobuf.StringValue not_found_ids = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {example: "[\"alert-789\"]"}];
}

message DeleteAlertDefRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Delete alert definition request"
      description: "A request to delete an alert definition by ID"
      required: ["id"]
    }
  };
  // Alert definition ID
  google.protobuf.StringValue id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "\"123e4567-e89b-12d3-a456-426614174000\""
    format: "UUIDv4"
  }];
}

message DeleteAlertDefResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Delete alert definition response"
      description: "A response to the deletion of an alert definition"
    }
  };
}

message ReplaceAlertDefRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Replace alert definition request"
      description: "A request to replace an existing alert definition"
      required: [
        "alert_def_properties",
        "id"
      ]
    }
  };
  AlertDefProperties alert_def_properties = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The properties of the alert definition"}];
  // Alert definition ID
  google.protobuf.StringValue id = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Alert definition ID"
    example: "\"123e4567-e89b-12d3-a456-426614174000\""
  }];
}

message ReplaceAlertDefResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Replace alert definition response"
      description: "A response that contains the updated alert definition"
      required: ["alert_def"]
    }
  };
  AlertDef alert_def = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The updated alert definition"}];
}

message CreateAlertDefRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Create alert definition request"
      description: "A request to create a new alert definition"
      required: ["alert_def_properties"]
    }
  };
  AlertDefProperties alert_def_properties = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The properties of the alert definition"}];
}

message CreateAlertDefResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Create alert definition response"
      description: "A response that contains the newly created alert definition"
      required: ["alert_def"]
    }
  };
  AlertDef alert_def = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "The newly created alert definition"}];
}

//message AtomicBatchExecuteAlertRequest {
// repeated AlertExecutionRequest requests = 1;
//}
//message AtomicBatchExecuteAlertResponse {
//  repeated AlertExecutionResponse matching_responses = 1;
//  //TODO: Where should this object be placed
//  com.coralogix.api.ResponseStatus status = 2;
//}

//message AlertExecutionRequest {
//  oneof request {
//    CreateAlertDefRequest create = 1;
//    ReplaceAlertDefRequest replace = 2;
//    DeleteAlertDefRequest delete = 3;
//  }
//}
//message AlertExecutionResponse {
//  oneof response {
//    CreateAlertDefResponse create = 1;
//    ReplaceAlertDefResponse replace = 2;
//    DeleteAlertDefResponse delete = 3;
//  }
//}
//message GetLimitsRequest {}
//
//message GetLimitsResponse {
//  google.protobuf.StringValue company_id = 1;
//  google.protobuf.Int32Value limit = 2;
//  google.protobuf.Int32Value used = 3;
//}
//message ValidateAlertRequest {
//  Alert alert = 1;
//}
//message ValidateAlertResponse {
//  google.protobuf.BoolValue valid = 1;
//}
message SetActiveRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Enable/disable alert request"
      description: "A request to enable or disable an alert"
      required: [
        "id",
        "active"
      ]
    }
  };
  // Alert definition ID
  google.protobuf.StringValue id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The alert definition ID"
    example: "\"123e4567-e89b-12d3-a456-426614174000\""
    format: "UUIDv4"
  }];
  google.protobuf.BoolValue active = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Whether to enable or disable the alert definition"
    example: "true"
  }];
}

message SetActiveResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Set active response"
      description: "Response after enabling or disabling an alert definition"
    }
  };
}

message FilterOptionCountsRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Filter option counts request"
      description: "Request to get counts for filter options based on applied filters"
    }
  };
  FilterOptionCountsFilter filter = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The filter to apply when counting options"
  }];
}

message FilterOptionCountsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Filter option counts response"
      description: "Response containing counts for different filter options"
    }
  };
  FilterOptionCounts counts = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The counts for different filter options"
  }];
}

message FilterOptionCountsFilter {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Filter option counts filter"
      description: "Filter configuration for counting filter options"
    }
  };
  FilterOptionCountsNameFilter name_filter = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Filter by alert definition names"
  }];
  FilterOptionCountsTypeFilter type_filter = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Filter by alert definition types"
  }];
  FilterOptionCountsPriorityFilter priority_filter = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Filter by alert definition priorities"
  }];
  FilterOptionCountsEntityLabelsFilter entity_labels_filter = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Filter by alert definition entity labels"
  }];
}

message FilterOptionCountsNameFilter {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Filter option counts name filter"
      description: "Filter by alert definition names for counting options"
    }
  };
  repeated google.protobuf.StringValue names = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The name(s) of the alert definition - multiple values are OR'd together"
    example: "[\"My Alert\", \"Another Alert\"]"
  }];
  FilterMatcher matcher = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The filter operator (EQUALS, NOT_EQUALS, CONTAINS)"
    example: "\"FILTER_MATCHER_CONTAINS\""
  }];
}

message FilterOptionCountsTypeFilter {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Filter option counts type filter"
      description: "Filter by alert definition types for counting options"
    }
  };
  repeated AlertDefType types = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The alert types to include in the count - Standard, New Value, Unique Count, Tracing"
    example: "[\"ALERT_DEF_TYPE_LOGS_THRESHOLD\", \"ALERT_DEF_TYPE_LOGS_NEW_VALUE\", \"ALERT_DEF_TYPE_LOGS_UNIQUE_COUNT\", \"ALERT_DEF_TYPE_TRACING_THRESHOLD\"]"
  }];
}

message FilterOptionCountsPriorityFilter {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Filter option counts priority filter"
      description: "Filter by alert definition priorities"
    }
  };
  repeated AlertDefPriority priorities = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The alert priorities to include in the count"
    example: "[\"ALERT_DEF_PRIORITY_P1\", \"ALERT_DEF_PRIORITY_P2\", \"ALERT_DEF_PRIORITY_P3\"]"
  }];
}

message FilterOptionCountsEntityLabelsFilter {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Filter option counts entity labels filter"
      description: "Filter by alert definition entity labels with And/Or options"
    }
  };
  map<string, string> entity_labels = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The entity label key-value pairs to filter by"
    example: "{\"environment\": \"production\", \"team\": \"backend\"}"
  }];
  FilterValuesOperator labels_operator = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Whether all labels must match (AND) or any label can match (OR)"
    example: "\"FILTER_VALUES_OPERATOR_AND\""
  }];
}

message FilterOptionCounts {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Filter option counts"
      description: "Counts for different filter options"
    }
  };
  repeated TypeCount type_counts = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Counts for different alert types"
  }];
  repeated PriorityCount priority_counts = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Counts for different alert priorities"
  }];
  repeated EntityLabelCount entity_label_counts = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Counts for different entity label values"
  }];
}

message TypeCount {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Type count"
      description: "Count for a specific alert type"
    }
  };
  AlertDefType type = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The alert type"
    example: "\"ALERT_DEF_TYPE_LOGS_THRESHOLD\""
  }];
  google.protobuf.UInt32Value count = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The count for this alert type"
    example: "42"
  }];
}

message PriorityCount {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Priority count"
      description: "Count for a specific alert priority"
    }
  };
  AlertDefPriority priority = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The alert priority"
    example: "\"ALERT_DEF_PRIORITY_P1\""
  }];
  google.protobuf.UInt32Value count = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The count for this alert priority"
    example: "15"
  }];
  google.protobuf.UInt32Value override_rules_count = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The count of multi-condition override rules with this priority"
    example: "3"
  }];
}

message EntityLabelCount {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Entity label count"
      description: "Count for a specific entity label value"
    }
  };
  google.protobuf.StringValue label_key = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The entity label key"
    example: "\"environment\""
  }];
  google.protobuf.StringValue label_value = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The entity label value"
    example: "\"production\""
  }];
  google.protobuf.UInt32Value count = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The count for this entity label value"
    example: "28"
  }];
}
