syntax = "proto3";

package com.coralogixapis.alerting.v1;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

message LogsQuery{
  google.protobuf.StringValue alias = 1;
  google.protobuf.StringValue lucene = 2;
  // Variation 2 - More specific variation if we'd like to reduce parsing effort for now
  // TBD - Current API has also computerName, etc.. but not exposed in the UI. Is it really needed?
//      applicationname_filters: [
//      "equals:approd2,cx-events",
//      "includes:moshe",
//      "startswith:blah"
//      ],
//      subsystemname_filters: [
//      "subsystemname:endswith:-prod"
//      ]
//      severity_filters: [
//      "Debug", "Error"
//  ]
  // Variation 3 - Like Variation 1, but with a standard syntax, and not something specific to alerts
  //   will require:
  //     1. literal array support in DP
  //     2. IN binary operator in DP
  //     3. Adding severity to $l in logs themselves. This is needed for many other reasons
  google.protobuf.StringValue label_filters =3 ;
  // "applicationname in ['approd2','cx-events'] || applicationname.includes('moshe') OR applicationname.startswith('blah') && subsystemname.endswith('-prod') && severity in ['Debug','Error']"

}